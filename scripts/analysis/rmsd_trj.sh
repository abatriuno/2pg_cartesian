#!/bin/bash
# This script makes .pdb and .gro trajectories containing the best individual of each generation
#
# $1 where Gromacs programs are.
# $2 where local execute is. Here is your working directory where all files will be created
# $3 protpred executables location.
# $4 Configuration file
# $5 Number of generations
# $6 Individual RMSD ranking
# $7 output file name in which the trajectories will be created
# $8 file for checking the script current generation
#
#
#                                                             last modification: 12/03/2012


# Counter variable
i=1

# If the output files exists, delete them
if [ -e "$2""$7"".pdb" ]; then rm "$2""$7"".pdb"; fi
if [ -e "$2""$7"".gro" ]; then rm "$2""$7"".gro"; fi
if [ -e "$2""$8" ]; then rm "$2""$8"; fi

# Creates empty output files
touch "$2""$7"".pdb" "$2""$8" "$2""$7"".gro"

let total=$5

while [ $i -le $total ]; do

        # Generates pdb files for the ith generation
        "$3"./protpred-Gromacs_Nerf_Population "$2""$4" pop_"$i".pop

        # Calculates and classifies individuals according to their RMSD
        "$3"./protpred-Gromacs-RMSD "$2""$4"

        # spaces.rmsd is a necessary file because of the spaces between the columns of the original file
        more protpred-Gromacs.rmsd | sed 's/\ /\ \ \ \ \ /g' > spaces.rmsd

        # Identifies the best individues
        best=$(more spaces.rmsd | grep -v ";" | grep -v "::" | grep -v "spaces" | grep -v "protpred" | head -n "$6" | tail -n 1 | cut -c 1-22 | sed 's/\ //g')

        # Generates the .gro file for the best individual
        pdb2gmx -f $best -o rmsd_temporary_"$i".gro -p rmsd_top.top -ff charmm27 -water none -ignh

        # Copies the best individual pdb
        cp $best rmsd_temporary_"$i".pdb

        # Adds the MODEL tag to the output pdb file
        echo "MODEL ""$i" >> "$2""$7"".pdb"

        # Adds the time indicator to the .gro output file
        echo "Generated by protpred-PEO-GROMACS : prediction t= ""$i" >> "$2""$7"".gro"

        # Adds the coordinates to the output file
        more rmsd_temporary_"$i".pdb | grep ATOM >> "$2""$7"".pdb"

        # Adds the ENDMDL tag to the output file
        echo ENDMDL >> "$2""$7"".pdb"

        # Adds the coordinates to the .gro output file
        tail -n+2 rmsd_temporary_"$i".gro >> "$2""$7"".gro"

        # Adds current generation to the checking file. useful when reading with "tail -f"
        echo "$i" >> "$2""$8"

        let i=$i+1

        rm \#*

done

# Adds the END tag to the output file
echo END >> "$2""$7"".pdb"

# Cleans the .gro output file
more "$2""$7"".gro" | grep -v ":::" | grep -v "rmsd_temporary" > rmsd_temporary_gro
rm "$2""$7"".gro"
mv rmsd_temporary_gro "$2""$7"".gro"


# Fits the trajectory
echo 3 1 | trjconv -f "$2""$7"".pdb" -o "$2""$7"".pdb" -fit rot+trans -s "$2""$7"".pdb"
echo 3 1 | trjconv -f "$2""$7"".gro" -o "$2""$7"".gro" -fit rot+trans -s "$2""$7"".gro"

rm spaces.rmsd rmsd_temporary_*
